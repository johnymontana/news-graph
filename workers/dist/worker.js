!function(e){var t={};function n(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(o,a,function(t){return e[t]}.bind(null,a));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports={Router:({base:e="",routes:t=[]}={})=>({__proto__:new Proxy({},{get:(n,o,a)=>(n,...r)=>t.push([o.toUpperCase(),RegExp(`^${(e+n).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/]+)$2$3").replace(/\.(?=[\w(])/,"\\.")}/*$`),r])&&a}),routes:t,async handle(e,...n){let o,a,r=new URL(e.url);for(var[i,s,p]of(e.query=Object.fromEntries(r.searchParams),t))if((i===e.method||"ALL"===i)&&(a=r.pathname.match(s)))for(var c of(e.params=a.groups,p))if(void 0!==(o=await c(e.proxy||e,...n)))return o}})}},function(e,t,n){"use strict";n.r(t);var o=n(0);const a=Object(o.Router)(),r=({statement:e,parameters:t})=>{var n=new Headers;return n.append("Accept","application/json"),n.append("Content-Type","application/json"),n.append("Authorization",NEO4J_AUTH),{method:"POST",headers:n,body:JSON.stringify({statements:[{statement:e,parameters:t}]}),redirect:"follow"}};a.get("/",async(e,t)=>{console.log(JSON.stringify(e,void 0,2));var n={location:{latitude:e.cf.latitude||0,longitude:e.cf.longitude||0}};const o=await fetch(NEO4J_HTTP_URI,r({statement:"\n    MATCH (g:Geo) \n    WITH \n      distance(g.location, point({latitude: toFloat($location.latitude), longitude: toFloat($location.longitude)})) AS dist, g\n    ORDER BY dist ASC LIMIT 10\n    MATCH (a:Article)-[:ABOUT_GEO]->(g) WITH DISTINCT a\n    RETURN \n      a {.*, \n        geos: [(a)-[:ABOUT_GEO]->(g:Geo) | g.name],  \n        topics: [(a)-[:HAS_TOPIC]->(t:Topic) | t.name], \n        orgs: [(a)-[:ABOUT_ORGANIZATION]->(o:Organization) | o.name], \n        people: [(a)-[:ABOUT_PERSON]->(p:Person) | p.name], \n        photos: [(a)-[:HAS_PHOTO]->(p:Photo) | {caption: p.caption, url: p.url}]\n      } AS data \n    ORDER BY a.published DESC",parameters:n})),a=await o.json();return new Response(JSON.stringify(a),{status:200,headers:{"content-type":"application/json;charset=UTF-8"}})}),a.get("/recommended/:id",async({params:e})=>{var t={article:{id:decodeURIComponent(e.id)}};const n=await fetch(NEO4J_HTTP_URI,r({statement:"\n    MATCH (a:Article) WHERE id(a) = toInteger($article.id)\n    RETURN \n      a {.*, \n        geos: [(a)-[:ABOUT_GEO]->(g:Geo) | g.name],  \n        topics: [(a)-[:HAS_TOPIC]->(t:Topic) | t.name], \n        orgs: [(a)-[:ABOUT_ORGANIZATION]->(o:Organization) | o.name], \n        people: [(a)-[:ABOUT_PERSON]->(p:Person) | p.name], \n        photos: [(a)-[:HAS_PHOTO]->(p:Photo) | {caption: p.caption, url: p.url}]\n      } AS data \n    ORDER BY a.published DESC",parameters:t})),o=await n.json();return new Response(JSON.stringify(o),{status:200,headers:{"content-type":"application/json;charset=UTF-8"}})}),a.all("*",()=>new Response("404, not found!",{status:404})),addEventListener("fetch",e=>{e.respondWith(a.handle(e.request))})}]);